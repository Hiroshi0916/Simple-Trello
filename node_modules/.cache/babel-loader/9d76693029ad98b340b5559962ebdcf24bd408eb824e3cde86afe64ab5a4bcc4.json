{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/trello-app/src/components/task/TaskCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import { TaskCardTitle } from \"./TaskCardTitle\";\n// import { TaskCardDeleteButton } from \"./button/TaskCardDeleteButton\";\nimport { TaskAddInput } from \"./input/TaskAddInput\";\nimport { Tasks } from \"./Tasks\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskCard = ({\n  taskCardsList,\n  setTaskCardsList,\n  taskCard,\n  index\n}) => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [taskList, setTaskList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: taskCard === null || taskCard === void 0 ? void 0 : taskCard.id,\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskCard\",\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskCardTitleAndTaskCardDeleteButtonArea\",\n        ...provided.dragHandleProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskAddInput, {\n        inputText: inputText,\n        setInputText: setInputText,\n        setTaskList: setTaskList,\n        taskList: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        inputText: inputText,\n        taskList: taskList,\n        setTaskList: setTaskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"KkTAPONdtmkp06euaRhAkN13f2Y=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","TaskAddInput","Tasks","Draggable","jsxDEV","_jsxDEV","TaskCard","taskCardsList","setTaskCardsList","taskCard","index","_s","inputText","setInputText","taskList","setTaskList","draggableId","id","children","provided","className","ref","innerRef","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/trello-app/src/components/task/TaskCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n// import { TaskCardTitle } from \"./TaskCardTitle\";\n// import { TaskCardDeleteButton } from \"./button/TaskCardDeleteButton\";\nimport { TaskAddInput } from \"./input/TaskAddInput\";\nimport { Tasks } from \"./Tasks\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nexport const TaskCard = ({\n  taskCardsList,\n  setTaskCardsList,\n  taskCard,\n  index,\n}) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [taskList, setTaskList] = useState([]);\n  return (\n    <Draggable draggableId={taskCard?.id} index={index}>\n      {(provided) => (\n        <div\n          className=\"taskCard\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n        >\n          <div\n            className=\"taskCardTitleAndTaskCardDeleteButtonArea\"\n            {...provided.dragHandleProps}\n          >\n            {/* <TaskCardTitle /> */}\n            {/* <TaskCardDeleteButton\n              taskCardsList={taskCardsList}\n              setTaskCardsList={setTaskCardsList}\n              taskCard={taskCard}\n            /> */}\n          </div>\n          <TaskAddInput\n            inputText={inputText}\n            setInputText={setInputText}\n            setTaskList={setTaskList}\n            taskList={taskList}\n          />\n          <Tasks\n            inputText={inputText}\n            taskList={taskList}\n            setTaskList={setTaskList}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\n\nexport default TaskCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AACA,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EACvBC,aAAa;EACbC,gBAAgB;EAChBC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,oBACEK,OAAA,CAACF,SAAS;IAACa,WAAW,EAAEP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEQ,EAAG;IAACP,KAAK,EAAEA,KAAM;IAAAQ,QAAA,EAC/CC,QAAQ,iBACRd,OAAA;MACEe,SAAS,EAAC,UAAU;MACpBC,GAAG,EAAEF,QAAQ,CAACG,QAAS;MAAA,GACnBH,QAAQ,CAACI,cAAc;MAAAL,QAAA,gBAE3Bb,OAAA;QACEe,SAAS,EAAC,0CAA0C;QAAA,GAChDD,QAAQ,CAACK;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQzB,CAAC,eACNvB,OAAA,CAACJ,YAAY;QACXW,SAAS,EAAEA,SAAU;QACrBC,YAAY,EAAEA,YAAa;QAC3BE,WAAW,EAAEA,WAAY;QACzBD,QAAQ,EAAEA;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFvB,OAAA,CAACH,KAAK;QACJU,SAAS,EAAEA,SAAU;QACrBE,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA;MAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACjB,EAAA,CA1CWL,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA6CrB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}