{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/Simple-Trello/Simple-Trello/src/components/task/Tasks.tsx\";\nimport React from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { Task } from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = ({\n  taskList,\n  setTaskList\n}) => {\n  if (!taskList) return null;\n  const reorder = (taskList, startIndex, endIndex) => {\n    const newList = [...taskList];\n    const [removed] = newList.splice(startIndex, 1);\n    newList.splice(endIndex, 0, removed);\n    return newList;\n  };\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const newTaskList = reorder(taskList, result.source.index, result.destination.index);\n    setTaskList(newTaskList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [taskList.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              task: task,\n              index: index,\n              taskList: taskList,\n              setTaskList: setTaskList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","DragDropContext","Droppable","Task","jsxDEV","_jsxDEV","Tasks","taskList","setTaskList","reorder","startIndex","endIndex","newList","removed","splice","handleDragEnd","result","destination","newTaskList","source","index","children","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","map","task","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/Simple-Trello/Simple-Trello/src/components/task/Tasks.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { DragDropContext, DropResult, Droppable } from \"react-beautiful-dnd\";\nimport { Task } from \"./Task\";\nimport { TasksProps } from \"../../interfaces/TasksProps\";\n\nconst Tasks: React.FC<TasksProps>=({ taskList, setTaskList })=> {\n  if (!taskList) return null;\n\n  const reorder=(taskList,startIndex,endIndex)=>{\n    const newList =[...taskList];\n    const [removed] =newList.splice(startIndex, 1);\n    newList.splice(endIndex, 0, removed);\n    return newList;\n  }\n\n  const handleDragEnd = (result:DropResult) => {\n    if(!result.destination)return;\n\n    const newTaskList =reorder(taskList,result.source.index,result.destination.index);\n    setTaskList(newTaskList);\n  };\n\n  return (\n    <div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {taskList.map((task, index) => (\n                <div key={task.id}>\n                  <Task\n                    task={task}\n                    index={index}\n                    taskList={taskList}\n                    setTaskList={setTaskList}\n                  />\n                </div>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\nexport default Tasks;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,eAAe,EAAcC,SAAS,QAAQ,qBAAqB;AAC5E,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9B,MAAMC,KAA2B,GAACA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAI;EAC9D,IAAI,CAACD,QAAQ,EAAE,OAAO,IAAI;EAE1B,MAAME,OAAO,GAACA,CAACF,QAAQ,EAACG,UAAU,EAACC,QAAQ,KAAG;IAC5C,MAAMC,OAAO,GAAE,CAAC,GAAGL,QAAQ,CAAC;IAC5B,MAAM,CAACM,OAAO,CAAC,GAAED,OAAO,CAACE,MAAM,CAACJ,UAAU,EAAE,CAAC,CAAC;IAC9CE,OAAO,CAACE,MAAM,CAACH,QAAQ,EAAE,CAAC,EAAEE,OAAO,CAAC;IACpC,OAAOD,OAAO;EAChB,CAAC;EAED,MAAMG,aAAa,GAAIC,MAAiB,IAAK;IAC3C,IAAG,CAACA,MAAM,CAACC,WAAW,EAAC;IAEvB,MAAMC,WAAW,GAAET,OAAO,CAACF,QAAQ,EAACS,MAAM,CAACG,MAAM,CAACC,KAAK,EAACJ,MAAM,CAACC,WAAW,CAACG,KAAK,CAAC;IACjFZ,WAAW,CAACU,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEb,OAAA;IAAAgB,QAAA,eACEhB,OAAA,CAACJ,eAAe;MAACqB,SAAS,EAAEP,aAAc;MAAAM,QAAA,eACxChB,OAAA,CAACH,SAAS;QAACqB,WAAW,EAAC,WAAW;QAAAF,QAAA,EAC9BG,QAAQ,iBACRnB,OAAA;UAAA,GAASmB,QAAQ,CAACC,cAAc;UAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAAAN,QAAA,GACtDd,QAAQ,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAET,KAAK,kBACxBf,OAAA;YAAAgB,QAAA,eACEhB,OAAA,CAACF,IAAI;cACH0B,IAAI,EAAEA,IAAK;cACXT,KAAK,EAAEA,KAAM;cACbb,QAAQ,EAAEA,QAAS;cACnBC,WAAW,EAAEA;YAAY;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC,GANMJ,IAAI,CAACK,EAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOZ,CACN,CAAC,EACDT,QAAQ,CAACW,WAAW;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAAG,EAAA,GAxCK9B,KAA2B;AAyCjC,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}