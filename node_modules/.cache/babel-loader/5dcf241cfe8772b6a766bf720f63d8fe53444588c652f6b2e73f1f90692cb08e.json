{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/trello-app/src/components/task/TaskCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskCardTitle from \"./TaskCardTitle\";\nimport TaskCardDeleteButton from \"./button/TaskCardDeleteButton\";\nimport { Tasks } from \"./Tasks\";\nimport { TaskAddInput } from \"./input/TaskAddInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskCard = ({\n  taskCardsList,\n  setTaskCardsList,\n  taskCard,\n  index\n}) => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [taskList, setTaskList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: taskCard.id,\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskCard\",\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskCardTitleAndTaskCardDeleteButtonArea\",\n        ...provided.dragHandleProps,\n        children: [/*#__PURE__*/_jsxDEV(TaskCardTitle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskCardDeleteButton, {\n          taskCardsList: taskCardsList,\n          setTaskCardsList: setTaskCardsList,\n          taskCard: taskCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskAddInput, {\n        inputText: inputText,\n        setInputText: setInputText,\n        setTaskList: setTaskList,\n        taskList: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        inputText: inputText,\n        taskList: taskList,\n        setTaskList: setTaskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"KkTAPONdtmkp06euaRhAkN13f2Y=\");\n_c = TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useState","TaskCardTitle","TaskCardDeleteButton","Tasks","TaskAddInput","jsxDEV","_jsxDEV","TaskCard","taskCardsList","setTaskCardsList","taskCard","index","_s","inputText","setInputText","taskList","setTaskList","Draggable","draggableId","id","children","provided","className","ref","innerRef","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/trello-app/src/components/task/TaskCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskCardTitle from \"./TaskCardTitle\";\nimport TaskCardDeleteButton from \"./button/TaskCardDeleteButton\";\nimport {Tasks} from \"./Tasks\";\nimport { TaskAddInput } from \"./input/TaskAddInput\";\n\nexport const TaskCard = ({\n  taskCardsList,\n  setTaskCardsList,\n  taskCard,\n  index,\n}) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [taskList, setTaskList] = useState([]);\n\n  return (\n    <Draggable draggableId={taskCard.id} index={index}>\n      {(provided) => (\n        <div\n          className=\"taskCard\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n        >\n          <div\n            className=\"taskCardTitleAndTaskCardDeleteButtonArea\"\n            {...provided.dragHandleProps}\n          >\n            <TaskCardTitle />\n\n            <TaskCardDeleteButton\n              taskCardsList={taskCardsList}\n              setTaskCardsList={setTaskCardsList}\n              taskCard={taskCard}\n            />\n          </div>\n          <TaskAddInput\n            inputText={inputText}\n            setInputText={setInputText}\n            setTaskList={setTaskList}\n            taskList={taskList}\n          />\n          <Tasks\n            inputText={inputText}\n            taskList={taskList}\n            setTaskList={setTaskList}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,oBAAoB,MAAM,+BAA+B;AAChE,SAAQC,KAAK,QAAO,SAAS;AAC7B,SAASC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EACvBC,aAAa;EACbC,gBAAgB;EAChBC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5C,oBACEM,OAAA,CAACW,SAAS;IAACC,WAAW,EAAER,QAAQ,CAACS,EAAG;IAACR,KAAK,EAAEA,KAAM;IAAAS,QAAA,EAC9CC,QAAQ,iBACRf,OAAA;MACEgB,SAAS,EAAC,UAAU;MACpBC,GAAG,EAAEF,QAAQ,CAACG,QAAS;MAAA,GACnBH,QAAQ,CAACI,cAAc;MAAAL,QAAA,gBAE3Bd,OAAA;QACEgB,SAAS,EAAC,0CAA0C;QAAA,GAChDD,QAAQ,CAACK,eAAe;QAAAN,QAAA,gBAE5Bd,OAAA,CAACL,aAAa;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEjBxB,OAAA,CAACJ,oBAAoB;UACnBM,aAAa,EAAEA,aAAc;UAC7BC,gBAAgB,EAAEA,gBAAiB;UACnCC,QAAQ,EAAEA;QAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxB,OAAA,CAACF,YAAY;QACXS,SAAS,EAAEA,SAAU;QACrBC,YAAY,EAAEA,YAAa;QAC3BE,WAAW,EAAEA,WAAY;QACzBD,QAAQ,EAAEA;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFxB,OAAA,CAACH,KAAK;QACJU,SAAS,EAAEA,SAAU;QACrBE,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAClB,EAAA,CA5CWL,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}