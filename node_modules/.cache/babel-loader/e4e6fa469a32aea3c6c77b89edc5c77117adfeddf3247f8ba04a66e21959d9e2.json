{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/trello-app/src/components/task/TaskCards.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskCard from \"./TaskCard\";\nimport { AddTaskCardButton } from \"./button/AddTaskCardButton\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reorder = (taskCardsList, startIndex, endIndex) => {\n  const remove = taskCardsList.splice(startIndex, 1);\n  taskCardsList.splice(endIndex, 0, remove[0]);\n};\nexport const TaskCards = () => {\n  _s();\n  const [taskCardsList, setTaskCardsList] = useState([{\n    id: \"0\",\n    draggableId: \"item0\"\n  }]);\n  const handleDragEnd = result => {\n    reorder(taskCardsList, result.source.index, result.destination.index);\n    setTaskCardsList(taskCardsList);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"droppable\",\n      direction: \"horizontal\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskCardsArea\",\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [taskCardsList.map((taskCard, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n          index: index,\n          taskCardsList: taskCardsList,\n          setTaskCardsList: setTaskCardsList,\n          taskCard: taskCard\n        }, taskCard.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(AddTaskCardButton, {\n          taskCardsList: taskCardsList,\n          setTaskCardsList: setTaskCardsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCards, \"Nns1ZLew1xFYvmwnIQDleolCp+M=\");\n_c = TaskCards;\nvar _c;\n$RefreshReg$(_c, \"TaskCards\");","map":{"version":3,"names":["React","useState","TaskCard","AddTaskCardButton","DragDropContext","Droppable","jsxDEV","_jsxDEV","reorder","taskCardsList","startIndex","endIndex","remove","splice","TaskCards","_s","setTaskCardsList","id","draggableId","handleDragEnd","result","source","index","destination","onDragEnd","children","droppableId","direction","provided","className","droppableProps","ref","innerRef","map","taskCard","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/trello-app/src/components/task/TaskCards.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskCard from \"./TaskCard\";\nimport { AddTaskCardButton } from \"./button/AddTaskCardButton\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nconst reorder =(taskCardsList,startIndex, endIndex)=>{\n  const remove = taskCardsList.splice(startIndex,1);\n  taskCardsList.splice(endIndex,0,remove[0]);\n}\n\nexport const TaskCards = () => {\n  const [taskCardsList, setTaskCardsList] = useState([{\n    id:\"0\",\n    draggableId:\"item0\"\n  }\n  ]);\n\n  const handleDragEnd=(result)=>{\n    reorder(taskCardsList,result.source.index,result.destination.index)\n\n    setTaskCardsList(taskCardsList);\n  }\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n        {(provided)=>(\n      <div className=\"taskCardsArea\" {...provided.droppableProps} ref={provided.innerRef}>\n      {taskCardsList.map((taskCard,index) => (\n        <TaskCard key={taskCard.id}\n        index={index}\n        taskCardsList={taskCardsList}\n        setTaskCardsList={setTaskCardsList}\n        taskCard={taskCard}\n        />\n      ))}\n      {provided.placeholder}\n      <AddTaskCardButton\n        taskCardsList={taskCardsList}\n        setTaskCardsList={setTaskCardsList}\n      />\n    </div>\n        )}\n\n      </Droppable>\n    </DragDropContext>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,eAAe,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,OAAO,GAAEA,CAACC,aAAa,EAACC,UAAU,EAAEC,QAAQ,KAAG;EACnD,MAAMC,MAAM,GAAGH,aAAa,CAACI,MAAM,CAACH,UAAU,EAAC,CAAC,CAAC;EACjDD,aAAa,CAACI,MAAM,CAACF,QAAQ,EAAC,CAAC,EAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC;AAED,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACN,aAAa,EAAEO,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,CAAC;IAClDgB,EAAE,EAAC,GAAG;IACNC,WAAW,EAAC;EACd,CAAC,CACA,CAAC;EAEF,MAAMC,aAAa,GAAEC,MAAM,IAAG;IAC5BZ,OAAO,CAACC,aAAa,EAACW,MAAM,CAACC,MAAM,CAACC,KAAK,EAACF,MAAM,CAACG,WAAW,CAACD,KAAK,CAAC;IAEnEN,gBAAgB,CAACP,aAAa,CAAC;EACjC,CAAC;EACD,oBACEF,OAAA,CAACH,eAAe;IAACoB,SAAS,EAAEL,aAAc;IAAAM,QAAA,eACxClB,OAAA,CAACF,SAAS;MAACqB,WAAW,EAAC,WAAW;MAACC,SAAS,EAAC,YAAY;MAAAF,QAAA,EACrDG,QAAQ,iBACZrB,OAAA;QAAKsB,SAAS,EAAC,eAAe;QAAA,GAAKD,QAAQ,CAACE,cAAc;QAAEC,GAAG,EAAEH,QAAQ,CAACI,QAAS;QAAAP,QAAA,GAClFhB,aAAa,CAACwB,GAAG,CAAC,CAACC,QAAQ,EAACZ,KAAK,kBAChCf,OAAA,CAACL,QAAQ;UACToB,KAAK,EAAEA,KAAM;UACbb,aAAa,EAAEA,aAAc;UAC7BO,gBAAgB,EAAEA,gBAAiB;UACnCkB,QAAQ,EAAEA;QAAS,GAJJA,QAAQ,CAACjB,EAAE;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKzB,CACF,CAAC,EACDV,QAAQ,CAACW,WAAW,eACrBhC,OAAA,CAACJ,iBAAiB;UAChBM,aAAa,EAAEA,aAAc;UAC7BO,gBAAgB,EAAEA;QAAiB;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IACA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEtB,CAAC;AAACvB,EAAA,CApCWD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}